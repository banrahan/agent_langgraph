This was my first thought for the API endpoint for search operations. I will keep it here for reference.

# @app.route("/api/search", methods=["POST"])
# def api_search():
#     """API endpoint for search operations"""
#     data = request.json

#     search_agent_prompt = """
# You are an expert database administrator and data engineer specializing in Azure AI Search.
# Your goal is to search a database with the tool **search** and return the results in a JSON object. Do not add anything else to the JSON object.

# Instructions:
# 1. Use the **search** tool to find documents matching the user's query, found in the user's json input as **query**.
# 2. Return the results in a JSON object.
# """

#     # Initialize the workflow agent
#     search_agent = WorkflowAgent(
#         model=model,
#         tools=[
#             # NOTE: If I want to change the service that I am using, I can just change the tool here..not much code change, just this and the prompt
#             search,
#         ],
#         agent_prompt=search_agent_prompt,
#     )

#     result = search_agent.run_workflow({"query": data.get("query", "")})

#     # Return the result as JSON
#     return jsonify(result)



@app.route("/ui/<path:path>", methods=["GET"])
def user_interface(path):
    """User interface for the application"""

    ui_agent_prompt = f"""
You are a web server that returns web pages based on the URL path and the tools available. The application is front end to a REST API that allows users to search, create, update, and delete documents in a database. Use bootstrap for styling, html, and vanilla javascript as much as possible. What you return should be a complete html page that can be rendered in a browser. Do not add any additional text or explanation.

STEP 1: IDENTIFY THE USER INTENT
Use the path to identify the user intent. The current URL path is: ```{path}```

First check if this is a standard operation:
- If path equals "search" or contains words like "find", "get", "query": user **render_search_page** tool to render a search page
- If path equals "create" or contains words like "add", "new", "create": user **render_create_page** tool to render a create page
"""
    # Initialize the workflow agent with a higher recursion limit
    api_agent = WorkflowAgent(
        model=model,
        tools=[
            render_search_page,
            render_create_page,
        ],
        agent_prompt=ui_agent_prompt,
    )

    # Pass path directly rather than as action to make it clearer
    result = api_agent.run_workflow({})

    return result["page"]

if __name__ == "__main__":
    # Run the Flask app in debug mode
    app.run(debug=True)



# - If path equals "delete" or contains words like "remove", "delete", "trash": This is a DELETE operation and should return a delete page
# - If path equals "update" or contains words like "change", "modify", "update": This is an UPDATE operation and should return an update form



@tool
def search_bar(placeholder: str = "Search...") -> str:
    """
    Returns a search bar HTML div in bootstrap style.

    Args:
        placeholder (str): The placeholder text for the search input.

    Returns:
        str: HTML div for a search bar.
    """

    return f"""
    <div class="input-group mb-3">
        <input type="text" class="form-control" placeholder="{placeholder}" aria-label="Search"
            aria-describedby="button-addon2">
        <button class="btn btn-outline-secondary" type="button" id="button-addon2">Search</button>
    </div>
    """